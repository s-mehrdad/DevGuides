
// ********************************************************************************
/// <summary>
/// Git quick guide
/// PracticalGuide
/// created by Mehrdad Soleimanimajd on 26.01.2019
/// </summary>
/// <created>ʆϒʅ, 26.01.2019</created>
/// <changed>ʆϒʅ, 22.03.2023</changed>
// ********************************************************************************

the following is a sum of hours research in internet and noted to be quick. If you aren't already know the git concepts, the following isn't for you.
references:     https://git.github.io/git-reference
                https://stackoverflow.com
                https://git-scm.com/
                https://docs.github.com
                https://linuxize.com/
                https://google.com.search
                https://dev.classmethod.jp
                https://support.beanstalkapp.com
                https://toolsqa.com
                https://superuser.com
                https://docs.microsoft.com
                https://softwareengneering.stackexchange.com


                    #Description#           #Command#

general commands:
                    current path            pwd

                    change path             cd path (1Ex: /c:/users/ 2Ex(if spaces): "/c/program files/")

                    one directory up        cd ..

                    log (topology)          git log --topo-order (exit  q, help h)

                    global exclusion        git config core.excludesfile fullPathTo.gitignore

                    clone                   git clone git@github.com:repositoryPath.git
                                            git clone git@ssh.dev.azure.com:v3/repositoryPath

                    fetch                   git fetch alias

                    push                    git push alias branch
                                            git push --force alias branch

                    sub-modules             git submodule add URL
                                            git submodule update --init
                                            git submodule update --init --recursive

                    terminate               exit
                                            an ever running show more :)
                                              ~use the letter q

                    paste                   Shift + Ins

                    help                    git help
                                            git help command

SSH keys:
                    check                   ls -al ~/.ssh

                    generate                ssh-keygen -t ed25519 -C "email address"
                                            ssh-keygen -t rsa -b 4096 -C "email address"
                      ~on macOS or Linux it may be needed to insert the hardware security key
                    copy                    pbcopy < ~/.shh/ ... .pub

                    ssh-agent (launched)    eval "(ssh-agent -s)"
                                            ssh-add ~/.ssh/id_ed25519
                      ~auto launch: give it a research! :)

                    passphrase              ssh-keygen -p -f ~/.ssh/id_ed25519

                    test                    ssh -T git@github.com
                                            ssh -T git@ssh.dev.azure.com

Gitbub commit/tag signature:
                    GPG (private development) or S/MIME(organization)
                    //todo

clean operations:
                    repository              git gc --auto

                    all repository          for line in $(find -name '.git'); do (cd $line && git gc --auto); done

remote:
                    add                     git remote add alias URL

                    set                     git remote set-url alias URL

                    rename                  git remote rename old-alias new-alias

                    show                    git remote -v

configuration:
                    author                  git config --global user.name "name"
                                            git config --global user.email "email"

                    check                   git config --list

repository:
                    check                   git log --format=oneline/short/fuller/raw/...
                                            git show -s --format=...

                    new                     git init .
                                            git remote add origin git@...
                                            git touch README
                                            git add README
                                            git commit -m 'Initialization'
                                            git push origin master

snapshotting:
                    status                  git status -s

                    summary                 git diff -stat

                    differences             git diff
                                            git diff --cashed (staged)
                                            git diff head (staged or not)

                    stage                   git add .
                                            git restore --staged .

                    commit                  git commit -m 'comment'
                                            git commit -am 'comment' (auto staging)

                    commit modification     git commit --amend -m 'new-comment'
                      ~new changes can be staged beforehand
                      ~modified commit must be force pushed

                    rewrite history         git rebase -i head~5
                      ~show latest 5 commit

reset:
                    un-stage a file         git reset head -- file
                    undo last commit        git reset --soft head
                    undo and erase changes  git reset --hard head

staged modification:
                    remove                  git rm file
                                            git rm file --cached (just from staged)

                    correct wrong rename    git mv
                      ~a removed old file ended wrongly as a rename

postpone:
                    push on stack           git stash
                    view stack              git stash list
                    pop from stack          git stash apply
                                            git stash apply stashId

                    remove from stack       git stash drop stashId


----------------------------------------------------------------------


 ~on the road to getting acquainted to the git entity first got acquainted to these beauties! :)
----------------------------------------------------------------------
execute commands:
                    find . -maxdepth 1 -type d \( ! -name . \) -exec sh -c 'cd -p "$0" && git remote rename origin origin-gh && pwd' {} \;
                    ls -d */ | xargs -I {} bash -c "cd {} && git remote rename origin origin-gh | pwd"
                    for dir in ./*; do (cd "$dir" && git remote rename origin origin-gh && pwd); done
----------------------------------------------------------------------
deleting wrongly committed:
                    reset to the right commit then:     git push --force origin master
----------------------------------------------------------------------
finding big files:
                    find . -type f \( ! -regex ".*/\..*" \) -print | xargs ls -l | sort -k5,5rn | head
----------------------------------------------------------------------
deleting big unnecessary files in commits: (+afterNeed  git push --force)
                    git filter-branch -f --index-filter \
                        'git rm --cached --ignore-unmatch fullPathToBigFile.ex' \
                        --tag-name-filter cat -- --all
----------------------------------------------------------------------
